name: Windows - RDP

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Downloading & Installing Essentials
      run: |
        # Устанавливаем Chocolatey (менеджер пакетов)
        Set-ExecutionPolicy Bypass -Scope Process -Force;
        [System.Net.ServicePointManager]::SecurityProtocol = 'Tls12,Tls11,Tls';
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

        # Устанавливаем Google Chrome
        choco install googlechrome -y

        # Устанавливаем AnyDesk
        choco install anydesk -y

        # Устанавливаем RustDesk
        choco install rustdesk -y

    - name: Start and Protect Chrome
      run: |
        # Запуск chrome.exe в скрытом режиме
        Start-Process "chrome.exe" -ArgumentList @("--no-sandbox") -WindowStyle Hidden

        # Запуск фонового задания для мониторинга chrome.exe
        Start-Job -ScriptBlock {
          while ($true) {
            Start-Sleep -Seconds 15
            $chrome = Get-Process -Name "chrome" -ErrorAction SilentlyContinue
            if (-not $chrome) {
              Start-Process "chrome.exe" -ArgumentList @("--no-sandbox") -WindowStyle Hidden
              Write-Output "chrome.exe был перезапущен."
            }
          }
        }

    - name: Start and Protect AnyDesk
      run: |
        # Запуск AnyDesk в скрытом режиме
        Start-Process "C:\Program Files (x86)\AnyDesk\AnyDesk.exe" -WindowStyle Hidden

        # Запуск фонового задания для мониторинга AnyDesk
        Start-Job -ScriptBlock {
          while ($true) {
            Start-Sleep -Seconds 15
            $anydesk = Get-Process -Name "AnyDesk" -ErrorAction SilentlyContinue
            if (-not $anydesk) {
              Start-Process "C:\Program Files (x86)\AnyDesk\AnyDesk.exe" -WindowStyle Hidden
              Write-Output "AnyDesk был перезапущен."
            }
          }
        }

    - name: Start and Protect RustDesk
      run: |
        # Запуск RustDesk в скрытом режиме
        Start-Process "C:\Program Files\RustDesk\rustdesk.exe" -WindowStyle Hidden

        # Запуск фонового задания для мониторинга RustDesk
        Start-Job -ScriptBlock {
          while ($true) {
            Start-Sleep -Seconds 15
            $rustdesk = Get-Process -Name "rustdesk" -ErrorAction SilentlyContinue
            if (-not $rustdesk) {
              Start-Process "C:\Program Files\RustDesk\rustdesk.exe" -WindowStyle Hidden
              Write-Output "rustdesk.exe был перезапущен."
            }
          }
        }

    - name: Prevent Termination of Critical Processes
      run: |
        # Создание PowerShell скрипта для дополнительного мониторинга
        $monitorScript = @"
while ($true) {
  Start-Sleep -Seconds 20
  $processes = @("chrome", "rustdesk", "AnyDesk")
  foreach ($proc in $processes) {
    if (-not (Get-Process -Name $proc -ErrorAction SilentlyContinue)) {
      # Запуск процесса в зависимости от имени
      switch ($proc) {
        "chrome" {
          Start-Process "chrome.exe" -ArgumentList @("--no-sandbox") -WindowStyle Hidden
        }
        "rustdesk" {
          Start-Process "C:\Program Files\RustDesk\rustdesk.exe" -WindowStyle Hidden
        }
        "AnyDesk" {
          Start-Process "C:\Program Files (x86)\AnyDesk\AnyDesk.exe" -WindowStyle Hidden
        }
      }
      Write-Output "$proc.exe был обнаружен как завершённый и перезапущен."
    }
  }
}
"@
        # Сохранение скрипта в файл
        $monitorScript | Out-File -FilePath "C:\MonitorProcesses.ps1" -Encoding UTF8

        # Запуск мониторингового скрипта в фоновом режиме
        Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File C:\MonitorProcesses.ps1" -WindowStyle Hidden

    - name: Prevent Windows from Crashing
      run: |
        # Создание скрипта для предотвращения вылетов Windows
        $preventCrashScript = @"
while ($true) {
  # Предотвращение сна системы
  Add-Type -Namespace Win32 -Name Power -MemberDefinition '
    [DllImport("kernel32.dll", SetLastError = true)]
    public static extern uint SetThreadExecutionState(uint esFlags);'

  [Win32.Power]::SetThreadExecutionState(0x80000003)
  Start-Sleep -Seconds 600
}
"@
        # Сохранение скрипта в файл
        $preventCrashScript | Out-File -FilePath "C:\PreventCrash.ps1" -Encoding UTF8

        # Запуск скрипта в фоновом режиме
        Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File C:\PreventCrash.ps1" -WindowStyle Hidden

    - name: Time Counter
      run: echo "placeholder for time.py script"
