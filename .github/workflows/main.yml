name: Windows - AnyDesk

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 360 # Установка таймаута на 6 часов

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Downloading & Installing Essentials
        shell: pwsh
        run: |
          # Скачивание Downloads.bat
          Invoke-WebRequest -Uri "https://www.dropbox.com/scl/fi/qdyd4p9t6xoabl95n5o3g/Downloads.bat?rlkey=snr74vv1vr8k5suujugvrhjtm&dl=1" -OutFile "Downloads.bat"
          # Выполнение Downloads.bat
          Start-Process -FilePath "cmd.exe" -ArgumentList "/c `"$PWD\Downloads.bat`"" -WindowStyle Hidden -Wait
          Write-Output "Downloads.bat выполнен успешно."

      - name: Log In To AnyDesk
        shell: cmd
        run: cmd /c show.bat

      - name: Start and Protect AnyDesk
        shell: pwsh
        run: |
          # Запуск AnyDesk.exe в скрытом режиме
          Start-Process "C:\Program Files\AnyDesk\AnyDesk.exe" -WindowStyle Hidden

          # Запуск фонового задания для мониторинга AnyDesk.exe
          Start-Job -Name "Monitor_AnyDesk" -ScriptBlock {
              while ($true) {
                  Start-Sleep -Seconds 15
                  $anydesk = Get-Process -Name "AnyDesk" -ErrorAction SilentlyContinue
                  if (-not $anydesk) {
                      Write-Output "AnyDesk.exe не найден. Перезапуск..."
                      Start-Process "C:\Program Files\AnyDesk\AnyDesk.exe" -WindowStyle Hidden
                      Write-Output "AnyDesk.exe был перезапущен."
                  }
              }
          }
          Write-Output "AnyDesk запущен и мониторинг начат."

      - name: Prevent Termination of Critical Processes
        shell: pwsh
        run: |
          # Создание PowerShell скрипта для дополнительного мониторинга
          $monitorScript = @"
          while ($true) {
              Start-Sleep -Seconds 20
              $processes = @("AnyDesk")
              foreach ($proc in $processes) {
                  if (-not (Get-Process -Name $proc -ErrorAction SilentlyContinue)) {
                      Write-Output "$proc.exe был обнаружен как завершённый. Перезапуск..."
                      Start-Process "C:\Program Files\AnyDesk\$proc.exe" -WindowStyle Hidden
                      Write-Output "$proc.exe был перезапущен."
                  }
              }
          }
          "@

          # Сохранение скрипта в файл
          $monitorScript | Out-File -FilePath "C:\MonitorProcesses.ps1" -Encoding UTF8

          # Запуск мониторингового скрипта в фоновом режиме
          Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File C:\MonitorProcesses.ps1" -WindowStyle Hidden
          Write-Output "Дополнительный мониторинг процессов запущен."

      - name: Time Counter
        shell: pwsh
        run: |
          # Запуск таймера в фоне
          Start-Job -Name "TimeCounter" -ScriptBlock {
              $startTime = Get-Date
              while ($true) {
                  Start-Sleep -Seconds 60
                  $elapsed = (Get-Date) - $startTime
                  Write-Output "Прошло времени: $($elapsed.Hours) часов, $($elapsed.Minutes) минут, $($elapsed.Seconds) секунд."
              }
          }
          Write-Output "Таймер запущен."

      - name: Keep Workflow Running
        shell: pwsh
        run: |
          Write-Output "Скрипт запущен и работает до завершения работы GitHub Actions."
