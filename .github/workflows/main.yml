name: Windows - AnyDesk and RustDesk

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 360 # Установка таймаута на 6 часов

    steps:
    
      - name: Downloading & Installing Essentials
        run: |
          Invoke-WebRequest -Uri "https://www.dropbox.com/scl/fi/qdyd4p9t6xoabl95n5o3g/Downloads.bat?rlkey=snr74vv1vr8k5suujugvrhjtm&dl=1" -OutFile "Downloads.bat"
          cmd /c Downloads.bat

      - name: Download and Install AnyDesk
        run: |
          # Скачивание установщика AnyDesk
          Invoke-WebRequest -Uri "https://download.anydesk.com/AnyDesk.exe" -OutFile "AnyDesk.exe"
          # Установка AnyDesk в тихом режиме
          Start-Process -FilePath "AnyDesk.exe" -ArgumentList "/install /silent /norestart" -Wait
          # Удаление установочного файла после установки
          Remove-Item "AnyDesk.exe"

      - name: Log In To AnyDesk
        run: cmd /c show_anydesk.bat
        # Предполагается, что show_anydesk.bat содержит необходимые команды для запуска и настройки AnyDesk

      - name: Start and Protect Chrome
        run: |
          # Запуск chrome.exe в скрытом режиме
          Start-Process "chrome.exe" -ArgumentList @("--no-sandbox") -WindowStyle Hidden
          
          # Запуск фонового задания для мониторинга chrome.exe
          Start-Job -ScriptBlock {
            while ($true) {
              Start-Sleep -Seconds 15
              $chrome = Get-Process -Name "chrome" -ErrorAction SilentlyContinue
              if (-not $chrome) {
                Start-Process "chrome.exe" -ArgumentList @("--no-sandbox") -WindowStyle Hidden
                Write-Output "chrome.exe был перезапущен."
              }
            }
          }

      - name: Start and Protect RustDesk
        run: |
          # Запуск rustdesk.exe в скрытом режиме
          Start-Process "rustdesk.exe" -WindowStyle Hidden
          
          # Запуск фонового задания для мониторинга rustdesk.exe
          Start-Job -ScriptBlock {
            while ($true) {
              Start-Sleep -Seconds 15
              $rustdesk = Get-Process -Name "rustdesk" -ErrorAction SilentlyContinue
              if (-not $rustdesk) {
                Start-Process "rustdesk.exe" -WindowStyle Hidden
                Write-Output "rustdesk.exe был перезапущен."
              }
            }
          }

      - name: Start and Protect AnyDesk
        run: |
          # Запуск AnyDesk.exe в скрытом режиме
          Start-Process "AnyDesk.exe" -WindowStyle Hidden
          
          # Запуск фонового задания для мониторинга AnyDesk.exe
          Start-Job -ScriptBlock {
            while ($true) {
              Start-Sleep -Seconds 15
              $anydesk = Get-Process -Name "AnyDesk" -ErrorAction SilentlyContinue
              if (-not $anydesk) {
                Start-Process "AnyDesk.exe" -WindowStyle Hidden
                Write-Output "AnyDesk.exe был перезапущен."
              }
            }
          }

      - name: Prevent Termination of Critical Processes
        run: |
          # Создание PowerShell скрипта для дополнительного мониторинга
          $monitorScript = @"
          while ($true) {
            Start-Sleep -Seconds 20
            $processes = @("chrome", "rustdesk", "AnyDesk")
            foreach ($proc in $processes) {
              if (-not (Get-Process -Name $proc -ErrorAction SilentlyContinue)) {
                Start-Process "$proc.exe" -WindowStyle Hidden
                Write-Output "$proc.exe был обнаружен как завершённый и перезапущен."
              }
            }
          }
          "@
          
          # Сохранение скрипта в файл
          $monitorScript | Out-File -FilePath "C:\MonitorProcesses.ps1" -Encoding UTF8
          
          # Запуск мониторингового скрипта в фоновом режиме
          Start-Process powershell -ArgumentList "-NoProfile -ExecutionPolicy Bypass -File C:\MonitorProcesses.ps1" -WindowStyle Hidden

      - name: Time Counter
        run: python time.py
